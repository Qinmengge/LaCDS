// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// pAUC
Eigen::MatrixXd pAUC(Eigen::MatrixXd Truth, Eigen::MatrixXd Pred, int n);
RcppExport SEXP _LaCDS_pAUC(SEXP TruthSEXP, SEXP PredSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Truth(TruthSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Pred(PredSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(pAUC(Truth, Pred, n));
    return rcpp_result_gen;
END_RCPP
}
// Max
double Max(double a, double b);
RcppExport SEXP _LaCDS_Max(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(Max(a, b));
    return rcpp_result_gen;
END_RCPP
}
// Update
List Update(Eigen::MatrixXd wker, Eigen::MatrixXd gtau, Eigen::MatrixXd t, Eigen::MatrixXd X, Eigen::MatrixXd ind, Eigen::MatrixXd ker_t, Eigen::MatrixXd beta_v, int max_t, int c, int r, int nker);
RcppExport SEXP _LaCDS_Update(SEXP wkerSEXP, SEXP gtauSEXP, SEXP tSEXP, SEXP XSEXP, SEXP indSEXP, SEXP ker_tSEXP, SEXP beta_vSEXP, SEXP max_tSEXP, SEXP cSEXP, SEXP rSEXP, SEXP nkerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type wker(wkerSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type gtau(gtauSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type t(tSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type ind(indSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type ker_t(ker_tSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type beta_v(beta_vSEXP);
    Rcpp::traits::input_parameter< int >::type max_t(max_tSEXP);
    Rcpp::traits::input_parameter< int >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type nker(nkerSEXP);
    rcpp_result_gen = Rcpp::wrap(Update(wker, gtau, t, X, ind, ker_t, beta_v, max_t, c, r, nker));
    return rcpp_result_gen;
END_RCPP
}
// Like
double Like(Eigen::MatrixXd wker, Eigen::MatrixXd gtau, Eigen::MatrixXd t, Eigen::MatrixXd X, Eigen::MatrixXd ind, Eigen::MatrixXd ker_t, Eigen::MatrixXd beta_v, int max_t, int c, int r);
RcppExport SEXP _LaCDS_Like(SEXP wkerSEXP, SEXP gtauSEXP, SEXP tSEXP, SEXP XSEXP, SEXP indSEXP, SEXP ker_tSEXP, SEXP beta_vSEXP, SEXP max_tSEXP, SEXP cSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type wker(wkerSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type gtau(gtauSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type t(tSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type ind(indSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type ker_t(ker_tSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type beta_v(beta_vSEXP);
    Rcpp::traits::input_parameter< int >::type max_t(max_tSEXP);
    Rcpp::traits::input_parameter< int >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(Like(wker, gtau, t, X, ind, ker_t, beta_v, max_t, c, r));
    return rcpp_result_gen;
END_RCPP
}
// NW
List NW(Eigen::MatrixXd wker, Eigen::MatrixXd gtau, Eigen::MatrixXd t, Eigen::MatrixXd X, Eigen::MatrixXd ind, Eigen::MatrixXd ker_t, Eigen::MatrixXd beta_v, double tol, int max_iter, double alpha);
RcppExport SEXP _LaCDS_NW(SEXP wkerSEXP, SEXP gtauSEXP, SEXP tSEXP, SEXP XSEXP, SEXP indSEXP, SEXP ker_tSEXP, SEXP beta_vSEXP, SEXP tolSEXP, SEXP max_iterSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type wker(wkerSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type gtau(gtauSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type t(tSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type ind(indSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type ker_t(ker_tSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type beta_v(beta_vSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(NW(wker, gtau, t, X, ind, ker_t, beta_v, tol, max_iter, alpha));
    return rcpp_result_gen;
END_RCPP
}
// lik
List lik(Eigen::MatrixXd t, Eigen::MatrixXd X, Eigen::MatrixXd ind, Eigen::MatrixXd Beta_t, Eigen::MatrixXd Beta_v, Eigen::MatrixXd pi, int max_t, int r, int c, int group);
RcppExport SEXP _LaCDS_lik(SEXP tSEXP, SEXP XSEXP, SEXP indSEXP, SEXP Beta_tSEXP, SEXP Beta_vSEXP, SEXP piSEXP, SEXP max_tSEXP, SEXP rSEXP, SEXP cSEXP, SEXP groupSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type t(tSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type ind(indSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Beta_t(Beta_tSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Beta_v(Beta_vSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type pi(piSEXP);
    Rcpp::traits::input_parameter< int >::type max_t(max_tSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type group(groupSEXP);
    rcpp_result_gen = Rcpp::wrap(lik(t, X, ind, Beta_t, Beta_v, pi, max_t, r, c, group));
    return rcpp_result_gen;
END_RCPP
}
// Inf2
List Inf2(Eigen::MatrixXd wker, Eigen::MatrixXd pi, Eigen::MatrixXd tau, Eigen::MatrixXd t, Eigen::MatrixXd X, Eigen::MatrixXd ind, Eigen::MatrixXd Ker_t, Eigen::MatrixXd Beta_v, int max_t, int c, int r, int group, int nker);
RcppExport SEXP _LaCDS_Inf2(SEXP wkerSEXP, SEXP piSEXP, SEXP tauSEXP, SEXP tSEXP, SEXP XSEXP, SEXP indSEXP, SEXP Ker_tSEXP, SEXP Beta_vSEXP, SEXP max_tSEXP, SEXP cSEXP, SEXP rSEXP, SEXP groupSEXP, SEXP nkerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type wker(wkerSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type pi(piSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type t(tSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type ind(indSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Ker_t(Ker_tSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Beta_v(Beta_vSEXP);
    Rcpp::traits::input_parameter< int >::type max_t(max_tSEXP);
    Rcpp::traits::input_parameter< int >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type group(groupSEXP);
    Rcpp::traits::input_parameter< int >::type nker(nkerSEXP);
    rcpp_result_gen = Rcpp::wrap(Inf2(wker, pi, tau, t, X, ind, Ker_t, Beta_v, max_t, c, r, group, nker));
    return rcpp_result_gen;
END_RCPP
}
// EM
List EM(Eigen::MatrixXd wker, Eigen::MatrixXd Z, int group, Eigen::MatrixXd t, Eigen::MatrixXd X, Eigen::MatrixXd ind, Eigen::MatrixXd beta_t, Eigen::MatrixXd beta_v, double tol, double tol2, int max_iter, int min_iter, double alpha);
RcppExport SEXP _LaCDS_EM(SEXP wkerSEXP, SEXP ZSEXP, SEXP groupSEXP, SEXP tSEXP, SEXP XSEXP, SEXP indSEXP, SEXP beta_tSEXP, SEXP beta_vSEXP, SEXP tolSEXP, SEXP tol2SEXP, SEXP max_iterSEXP, SEXP min_iterSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type wker(wkerSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< int >::type group(groupSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type t(tSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type ind(indSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type beta_t(beta_tSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type beta_v(beta_vSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< double >::type tol2(tol2SEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< int >::type min_iter(min_iterSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(EM(wker, Z, group, t, X, ind, beta_t, beta_v, tol, tol2, max_iter, min_iter, alpha));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_LaCDS_pAUC", (DL_FUNC) &_LaCDS_pAUC, 3},
    {"_LaCDS_Max", (DL_FUNC) &_LaCDS_Max, 2},
    {"_LaCDS_Update", (DL_FUNC) &_LaCDS_Update, 11},
    {"_LaCDS_Like", (DL_FUNC) &_LaCDS_Like, 10},
    {"_LaCDS_NW", (DL_FUNC) &_LaCDS_NW, 10},
    {"_LaCDS_lik", (DL_FUNC) &_LaCDS_lik, 10},
    {"_LaCDS_Inf2", (DL_FUNC) &_LaCDS_Inf2, 13},
    {"_LaCDS_EM", (DL_FUNC) &_LaCDS_EM, 13},
    {NULL, NULL, 0}
};

RcppExport void R_init_LaCDS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
